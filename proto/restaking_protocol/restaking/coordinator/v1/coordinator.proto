syntax = "proto3";

package restaking_protocol.restaking.coordinator.v1;

import "gogoproto/gogo.proto";
import "google/protobuf/duration.proto";
import "cosmos/base/v1beta1/coin.proto";
import "cosmos_proto/cosmos.proto";
import "tendermint/abci/types.proto";
import "tendermint/crypto/keys.proto";

option go_package = "restaking_protocol/x/restaking/coordinator/types";

message ConsumerAdditionProposal{
    option (gogoproto.goproto_getters)  = false;
  
    // the title of the proposal
    string title = 1;
    // the description of the proposal
    string description = 2;
    string chain_id = 3 ;
    
    // Unbonding period for the consumer,
    google.protobuf.Duration unbonding_period = 4
        [(gogoproto.nullable) = false, (gogoproto.stdduration) = true];
    // Sent restaking related IBC packets will timeout after this duration
    google.protobuf.Duration timeout_period = 5
        [(gogoproto.nullable) = false, (gogoproto.stdduration) = true];
    // Sent transfer related IBC packets will timeout after this duration
    google.protobuf.Duration transfer_timeout_period = 6
        [(gogoproto.nullable) = false, (gogoproto.stdduration) = true];

    repeated string restaking_tokens = 7;

    repeated string reward_tokens = 8;
}

message Operator{
    string restaking_denom = 1;

    string operator_address = 2[(cosmos_proto.scalar) = "cosmos.AddressString"]; 

    string restaked_amount = 3 [
        (cosmos_proto.scalar)  = "cosmos.Int",
        (gogoproto.customtype) = "Int",
        (gogoproto.nullable)   = false
    ];
  
    string shares = 4 [
        (cosmos_proto.scalar)  = "cosmos.Int",
        (gogoproto.customtype) = "Int",
        (gogoproto.nullable)   = false
    ];

    repeated OperatedValidator operated_validators = 5 [(gogoproto.nullable)   = false] ;

    string owner = 6 [(cosmos_proto.scalar) = "cosmos.AddressString"]; 
}

message Params{
    string template_client = 1 [
        (gogoproto.customtype) = "TendermintLightClientState"
    ];
}

message ConsumerValidatorUpdates{
    repeated .tendermint.abci.ValidatorUpdate validator_updates = 1 [
      (gogoproto.nullable) = false,
      (gogoproto.moretags) = "yaml:\"validator_updates\""
    ];
}

message OperatedValidator{
    string chainID  = 1;

    .tendermint.crypto.PublicKey validator_pk = 2 [(gogoproto.nullable) = false];
}
